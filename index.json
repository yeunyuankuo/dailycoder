[{"categories":["AWS","Cloud","AWS IAM"],"contents":"\nWhat is AWS IAM? In AWS, Identity and Access Management (IAM) is one of the AWS services and it is used to help users securely control access to AWS resources. Everything you do in AWS needs permission, which means that you will eventually encounter or use IAM features when building your own AWS services. IAM features include determining who is eligible to sign in, who or what has access to resources, and so on.\nIAM Terminologies Cheatsheet: IAM Resource: IAM Resources includes IAM user, IAM user group, IAM role, IAM policy, and identity provider objects.\nIAM Identity: The resource objects in IAM that are used to identify and group resources.\nIAM Entity: IAM users and IAM roles are two examples. Use AWS\u0026rsquo;s IAM resource objects for authentication.\nPrincipal: A person or application with the authority to request an AWS action or operation. The principal must be authenticated as the AWS account root user or an IAM entity in order to make requests to AWS. This includes federated users and assumed roles.\nIAM User An IAM user is an AWS entity that you create to represent a person or application that interacts with AWS. AWS users are made up of a name and credentials.\nIAM User Cheatsheet: Brand new IAM users by default has no permissions\npermission boundary can be add to a user\nEach IAM user is associated with one and only one root user\nWhen creating a IAM user, IAM username isn\u0026rsquo;t capitlization sensitive (meaning Bob equals bob)\n3 ways to identify an IAM user: Name: the name you gave when you created the user.\nAmazon Resource Name (ARN): When you need to uniquely identify a user across all of AWS, you use the ARN.\nUnique identifier: This ID is only returned when the user is created through the API, Tools for Windows PowerShell, or AWS CLI; it is not displayed in the console.\nRoot User When an AWS account is newly created, you start with a single identity that has full access to all AWS services and resources in the account. This is the AWS account\u0026rsquo;s root user identity. An IAM user with administrator privileges is not the same as the root user of an AWS account.\nRoot user Cheatsheet: One account one root user\nA root user can create at most 5000 IAM users\nAccount-wide access to all AWS services and resources\nCreate or delete an AWS account\nBest practice is to never use root user, create an IAM user and use that instead\nCredentials Different credentials are required depending on the user and how AWS resources are accessed.\nConsole password\nA password that must be entered by the user in order to access interactive sessions like the AWS Management Console.\nRoot user credential: email + password.\nIAM user credential: account ID + username + password.\nAccess keys\nAccess key is a combination of access key ID + secret key.\nTo access AWS resources programmatically via the AWS CLI, Tools for Windows PowerShell, AWS SDKs, or APIs, access keys are required.\nAn access key is associated with an IAM user.\nOne IAM user can have at most 2 access keys.\nAccess keys are unique across AWS; thus, it can be used to identify a specific user.\nSSH keys for CodeCommit\nA SSH public key that can be used to authenticate with CodeCommit (OpenSSH formatted).\nServer certificates\nCertain AWS services can be authenticated using SSL/TLS certificates. AWS Certificate Manager is used to provision, manage, and deploy server certificates (ACM).\nIf you use an IAM user\u0026rsquo;s long-term credentials in your application, avoid embedding access keys directly into the application code. As a best practice, use temporary security credentials (IAM roles) instead of long-term access keys.\nIAM Users Real-Life Scenarios Team Members\nEvery team member who needs to access AWS resources in a small organization or company will be given an IAM user account created by the company\u0026rsquo;s root user account. Each IAM user account will have its own set of credentials: username + password + accountID.\nFederated Users\nIn a larger company with multiple teams and organizations, hundreds of thousands of employees may require access to AWS resources. The \u0026ldquo;single sign-on\u0026rdquo; strategy, which leverages AD (Microsoft Active Directory) to provide employees access to AWS services after they have been confirmed, is used by the majority of enterprises.\nCross Account Users\nWhen AWS users from other accounts attempt to access your AWS resources, this is referred to as a cross account user. Accounts may come from the same or different organizations. This can be solved with IAM roles, which we will discuss in the following chapter.\nPrograms and Applications\nOften times applications will request access for your teams AWS resource through AWS APIs or AWS CLI. In this case, they need an access key (access key ID + secret key) to authenticate their requests. Use temporary security credentials (IAM roles) instead of access keys as a best practice.\nIAM User Group An IAM user group is literally what it means \u0026ndash; a group of IAM users. User groups allow you to specify permissions for multiple users, making it easier to manage those users\u0026rsquo; permissions. For example, you could create a user group called Admins and grant that group standard administrator privileges. Any user in that user group has Admins group permissions by default. You can provide administrator capabilities to a new user who joins your company by adding them to the Admins user group. If a user in your company changes jobs, instead of altering that user\u0026rsquo;s permissions, you can remove him or her from the old user groups and add him or her to the necessary new user groups.\nUser Group Cheatsheet: User groups can\u0026rsquo;t be nested; they can contain only users, not other user groups.\nA user group can have many members, and a user can belong to multiple user groups.\nThere is no default user group that includes all AWS account users by default. If you want to have a user group like that, you must create it and assign each new user to it.\nThe number and size of IAM resources in an AWS account are limited, such as the number of groups and the number of groups that a user can be a member of. More information can be found at: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html.\nIAM group don\u0026rsquo;t have credentials.\nA single root account can only have 300 user groups.\nThere are a maximum of 300 user groups per root account.\nResources Official AWS IAM Users Documentation\nOfficial AWS IAM User Groups Documentation\n","date":"June 12, 2022","hero":"/images/hero/iam_hero.png","permalink":"https://yeunyuankuo.github.io/posts/iam/","summary":"What is AWS IAM? In AWS, Identity and Access Management (IAM) is one of the AWS services and it is used to help users securely control access to AWS resources. Everything you do in AWS needs permission, which means that you will eventually encounter or use IAM features when building your own AWS services. IAM features include determining who is eligible to sign in, who or what has access to resources, and so on.","tags":["AWS","Cloud","AWS IAM"],"title":"Learn AWS IAM (1) - IAM Users, Groups, Credentials"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://yeunyuankuo.github.io/archives/","summary":"archives","tags":null,"title":"Archives"}]